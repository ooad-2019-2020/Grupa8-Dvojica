@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<li class="nav-item">
<a class="nav-link text-dark @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">
    <p>Korisnički profil</p>
</a>
</li>
<li class="nav-item">
    <a class="nav-link text-dark @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">
        <p>Email</p>
    </a>
</li>
<li class="nav-item">
    <a class="nav-link text-dark @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">
        <p>Lozinka</p>
    </a>
</li>
@if (hasExternalLogins)
{
    <li id="external-logins" class="nav-item">
        <a id="external-login" class="nav-link text-dark @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">
            <p>External logins</p>
        </a>
    </li>
}
<li class="nav-item">
    <a class="nav-link text-dark @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">
        <p>Dvostruka provjera autentičnosti</p>
    </a>
</li>
<li class="nav-item">
    <a class="nav-link text-dark @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">
        <p>Lični podaci</p>
    </a>
</li>


